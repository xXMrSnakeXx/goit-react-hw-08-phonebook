{"version":3,"file":"static/js/477.fa92c244.chunk.js","mappings":"yPACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAgI,0B,UCKjH,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAlE,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACdJ,GAAQ,SAAAK,GAAQ,yBAAUA,GAAV,cAAqBT,EAAOQ,QAQtCR,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SACrB,OACE,gBAAKQ,UAAWC,EAAhB,UACE,kBAAMC,SATW,SAAAN,GACnBA,EAAEO,iBACFhB,EAASiB,EAAAA,GAAAA,UAAA,UAA6BX,KACtCC,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAMvC,WACE,mBAAOQ,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXI,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,8DACNC,UAAQ,EACRV,MAAOR,EACPmB,SAAUd,QAGd,mBAAOK,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXI,KAAK,QACLf,KAAK,QACLgB,QAAQ,mDACRC,MAAM,wBACNC,UAAQ,EACRV,MAAOP,EACPkB,SAAUd,QAGd,mBAAOK,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXI,KAAK,WACLf,KAAK,WACLkB,UAAQ,EACRV,MAAON,EACPiB,SAAUd,QAGd,mBAAQU,KAAK,SAASL,UAAWC,EAAjC","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterPage_form__9iStY\",\"label\":\"RegisterPage_label__R5ZZF\",\"input\":\"RegisterPage_input__9WI6M\",\"btn\":\"RegisterPage_btn__25iGB\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nimport s from './RegisterPage.module.css';\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ name: '', email: '', password: '' });\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setForm(prevForm => ({ ...prevForm, [name]: value }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ ...form }));\n    setForm({ name: '', email: '', password: '' });\n  };\n\n  const { name, email, password } = form;\n  return (\n    <div className={s.form}>\n      <form onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Email\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            title=\"Example user@mail.com\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Password\n          <input\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.btn}>\n          Registration\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":["RegisterPage","dispatch","useDispatch","useState","name","email","password","form","setForm","handleChange","e","currentTarget","value","prevForm","className","s","onSubmit","preventDefault","authOperations","type","pattern","title","required","onChange"],"sourceRoot":""}